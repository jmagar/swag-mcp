[project]
name = "swag-mcp"
version = "1.0.0"
description = "SWAG reverse proxy configuration generator MCP server"
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.11"
authors = [
    { name = "SWAG MCP Team" }
]
dependencies = [
    "fastmcp>=2.11.3",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.7.0",
    "jinja2>=3.1.6",
    "aiofiles>=24.1.0",
    "aiohttp>=3.9.0",
    "pyyaml>=6.0.0",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["swag_mcp"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.0",
    "bandit>=1.7.0",
    "pip-audit>=2.0.0",
    "types-aiofiles",
    "types-PyYAML",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.ruff]
cache-dir = ".cache/ruff"
line-length = 100
target-version = "py311"
src = ["swag_mcp"]
exclude = [
    ".git",
    ".cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D213", # Multi-line docstring summary should start at the second line
    "D203", # 1 blank line required before class docstring
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["D"]  # No docstrings required in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
cache_dir = ".cache/mypy"
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_untyped_decorators = false
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", ".venv", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert_used, paramiko_calls
