## Version 2025/08/20
# Generated by SWAG MCP Server
# MCP Streamable-HTTP Reverse Proxy Configuration
# Service: {{ service_name }}
# Domain: {{ server_name }}
# Upstream: {{ upstream_proto }}://{{ upstream_app }}:{{ upstream_port }}

server {
    listen 443 ssl;
{% if enable_quic %}
    listen 443 quic;
{% endif %}
    listen [::]:443 ssl;
{% if enable_quic %}
    listen [::]:443 quic;
{% endif %}

    server_name {{ server_name }};

    include /config/nginx/ssl.conf;

{% if enable_quic %}
    # QUIC/HTTP3 Alt-Svc headers
    add_header Alt-Svc 'h3-29=":443"; ma=86400' always;
    add_header Alt-Svc 'h3=":443"; ma=86400' always;
{% endif %}

    client_max_body_size 0;

    # Security headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

{% if auth_method != "none" %}
    # enable for {{ auth_method }} (requires {{ auth_method }}-location.conf in the location block)
    include /config/nginx/{{ auth_method }}-server.conf;
{% endif %}

    # Main MCP endpoint for streamable-http transport
    location {{ mcp_path | default('/mcp') }} {
{% if auth_method != "none" %}
        # enable for {{ auth_method }} (requires {{ auth_method }}-server.conf in the server block)
        include /config/nginx/{{ auth_method }}-location.conf;
{% endif %}
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;

        set $upstream_app "{{ upstream_app }}";
        set $upstream_port "{{ upstream_port }}";
        set $upstream_proto "{{ upstream_proto }}";

        # Essential settings for MCP streamable-http
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_cache off;
        proxy_request_buffering off;
        proxy_max_temp_file_size 0;
        chunked_transfer_encoding on;

        # Connection management for SSE/streaming
        proxy_set_header Connection '';

        # Cache control headers for streaming responses
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;

        # Standard reverse proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # MCP-specific headers
        proxy_set_header Accept $http_accept;
        proxy_set_header Mcp-Session-Id $http_mcp_session_id;

        # Timeouts for persistent connections
        proxy_connect_timeout 60s;
        proxy_send_timeout 86400s;
        proxy_read_timeout 86400s;

        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }

    # OAuth discovery endpoints (no auth)
    location = /.well-known/oauth-authorization-server {
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;

        set $upstream_app "{{ upstream_app }}";
        set $upstream_port "{{ upstream_port }}";
        set $upstream_proto "{{ upstream_proto }}";

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }

    location = /.well-known/openid-configuration {
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;

        set $upstream_app "{{ upstream_app }}";
        set $upstream_port "{{ upstream_port }}";
        set $upstream_proto "{{ upstream_proto }}";

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }

    # OAuth endpoints (no auth)
    location = /register {
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;

        set $upstream_app "{{ upstream_app }}";
        set $upstream_port "{{ upstream_port }}";
        set $upstream_proto "{{ upstream_proto }}";

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }

    location = /authorize {
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;

        set $upstream_app "{{ upstream_app }}";
        set $upstream_port "{{ upstream_port }}";
        set $upstream_proto "{{ upstream_proto }}";

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }

    location = /token {
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;

        set $upstream_app "{{ upstream_app }}";
        set $upstream_port "{{ upstream_port }}";
        set $upstream_proto "{{ upstream_proto }}";

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }

    location = /revoke {
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;

        set $upstream_app "{{ upstream_app }}";
        set $upstream_port "{{ upstream_port }}";
        set $upstream_proto "{{ upstream_proto }}";

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }

    # OAuth callback and other auth-related paths (no auth)
    location /auth/ {
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;

        set $upstream_app "{{ upstream_app }}";
        set $upstream_port "{{ upstream_port }}";
        set $upstream_proto "{{ upstream_proto }}";

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }

    # Health check endpoint (no auth required)
    location /health {
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;

        # Disable buffering for immediate health check responses
        proxy_buffering off;
        proxy_cache off;
        proxy_request_buffering off;

        set $upstream_app "{{ upstream_app }}";
        set $upstream_port "{{ upstream_port }}";
        set $upstream_proto "{{ upstream_proto }}";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }
}
