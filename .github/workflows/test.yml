name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHONUNBUFFERED: 1
  PYTHONDONTWRITEBYTECODE: 1

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Create virtual environment
      run: uv venv --python ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev

    - name: Lint with ruff
      run: |
        uv run ruff check --output-format=github .

    - name: Format code with ruff
      run: |
        uv run ruff format .

    - name: Commit and push formatting changes
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        if ! git diff --staged --quiet; then
          git commit -m "style: Auto-format code with ruff" \
                      -m "ðŸ¤– Generated by GitHub Actions"
          git pull --rebase origin main || true
          git push origin main
        fi

    - name: Type check with mypy
      run: |
        uv run mypy swag_mcp --ignore-missing-imports
      continue-on-error: true  # Don't fail CI on type errors yet

    - name: Run tests with pytest
      env:
        SWAG_MCP_PROXY_CONFS_PATH: /tmp/swag-test/proxy-confs
        SWAG_MCP_LOG_DIRECTORY: /tmp/swag-test/.swag-mcp/logs
        SWAG_MCP_LOG_FILE_ENABLED: false
        SWAG_MCP_DEFAULT_AUTH_METHOD: authelia
      run: |
        # Create test directories
        mkdir -p /tmp/swag-test/proxy-confs
        mkdir -p /tmp/swag-test/.swag-mcp/logs
        mkdir -p .cache/coverage

        # Run tests with coverage
        uv run pytest tests/ -v -m "not slow" \
          --cov=swag_mcp \
          --cov-report=xml:.cache/coverage/coverage.xml \
          --cov-report=term-missing \
          --cov-fail-under=80 \
          --tb=short

    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v4
      with:
        file: ./.cache/coverage/coverage.xml
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Test Docker build (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        docker build -t swag-mcp:test .

  security:
    name: Security checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync

    - name: Run security checks with bandit
      run: |
        uv run bandit -r swag_mcp/ -f json -o bandit-report.json || true
        uv run bandit -r swag_mcp/ || true
      continue-on-error: true

    - name: Upload security scan results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: bandit-report.json
