"""Sample SWAG configurations for testing."""

SAMPLE_SUBDOMAIN_CONFIG = """# Subdomain configuration for testapp
# Generated by SWAG MCP Server

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name testapp.*;

    include /config/nginx/ssl.conf;

    client_max_body_size 0;

    # enable for ldap auth (requires ldap-location.conf in the location block)
    #include /config/nginx/ldap-server.conf;

    # enable for Authelia (requires authelia-location.conf in the location block)
    include /config/nginx/authelia-server.conf;

    location / {

        # enable the next two lines for http auth
        #auth_basic "Restricted";
        #auth_basic_user_file /config/nginx/.htpasswd;

        # enable for ldap auth (requires ldap-server.conf in the server block)
        #include /config/nginx/ldap-location.conf;

        # enable for Authelia (requires authelia-server.conf in the server block)
        include /config/nginx/authelia-location.conf;

        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;
        set $upstream_app testapp;
        set $upstream_port 8080;
        set $upstream_proto http;
        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }
}
"""

SAMPLE_SUBFOLDER_CONFIG = """# Subfolder configuration for testapp
# Generated by SWAG MCP Server

location /testapp {
    return 301 $scheme://$host/testapp/;
}

location ^~ /testapp/ {

    # enable the next two lines for http auth
    #auth_basic "Restricted";
    #auth_basic_user_file /config/nginx/.htpasswd;

    # enable for ldap auth (requires ldap-server.conf in the server block)
    #include /config/nginx/ldap-location.conf;

    # enable for Authelia (requires authelia-server.conf in the server block)
    include /config/nginx/authelia-location.conf;

    include /config/nginx/proxy.conf;
    include /config/nginx/resolver.conf;
    set $upstream_app testapp;
    set $upstream_port 8080;
    set $upstream_proto http;
    proxy_pass $upstream_proto://$upstream_app:$upstream_port/;
}
"""

SAMPLE_SAMPLE_CONFIG = """# Sample configuration template
## Version 2025/01/19
# Make sure that your service is accessible at http://IP:PORT
# https://docs.linuxserver.io/general/swag#reverse-proxy-confs

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name sampleapp.*;

    include /config/nginx/ssl.conf;

    client_max_body_size 0;

    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/resolver.conf;
        set $upstream_app sampleapp;
        set $upstream_port 8080;
        set $upstream_proto http;
        proxy_pass $upstream_proto://$upstream_app:$upstream_port;
    }
}
"""

SAMPLE_BACKUP_CONFIG = """# Backup configuration for testapp
# This is a backup created on 2025-01-19

server {
    listen 443 ssl http2;
    server_name old-testapp.*;

    location / {
        set $upstream_app old-testapp;
        set $upstream_port 3000;
        proxy_pass http://$upstream_app:$upstream_port;
    }
}
"""

# Configuration content mappings for different scenarios
CONFIG_SAMPLES = {
    "basic_subdomain": SAMPLE_SUBDOMAIN_CONFIG,
    "basic_subfolder": SAMPLE_SUBFOLDER_CONFIG,
    "sample_template": SAMPLE_SAMPLE_CONFIG,
    "backup_config": SAMPLE_BACKUP_CONFIG,
}

# File names and their expected content for testing
TEST_CONFIGS = {
    "testapp.subdomain.conf": SAMPLE_SUBDOMAIN_CONFIG,
    "webapp.subfolder.conf": SAMPLE_SUBFOLDER_CONFIG,
    "sampleapp.conf.sample": SAMPLE_SAMPLE_CONFIG,
    "testapp.backup.2025-01-19.conf": SAMPLE_BACKUP_CONFIG,
}
